{"version":3,"sources":["_services/account.service.js","_services/alert.service.js","_services/classificator.service.js","_helpers/fetch-wrapper.js","_helpers/history.js","_helpers/role.js","_components/Alert.jsx","_components/Nav.jsx","_components/PrivateRoute.jsx","_components/NewsItem.jsx","_components/_modals/AddNewsModal.jsx","_components/_modals/ClassificationResultModal.jsx","home/pricing.js","home/feature1.js","home/index.js","account/Login.jsx","account/Register.jsx","account/VerifyEmail.jsx","account/ForgotPassword.jsx","account/ResetPassword.jsx","account/index.js","profile/Archive.jsx","profile/Update.jsx","profile/index.js","admin/Overview.jsx","admin/users/List.jsx","admin/users/AddEdit.jsx","admin/users/index.js","admin/index.js","classificator/index.js","App.js","index.js"],"names":["refreshTokenTimeout","userSubject","BehaviorSubject","baseUrl","config","apiUrl","accountService","login","email","password","fetchWrapper","post","then","user","next","startRefreshTokenTimer","logout","refreshToken","register","params","verifyEmail","token","forgotPassword","validateResetToken","resetPassword","confirmPassword","getAll","get","getById","id","create","update","put","value","delete","x","asObservable","clearTimeout","history","push","jwtToken","JSON","parse","atob","split","timeout","Date","exp","getTime","now","setTimeout","alertSubject","Subject","defaultId","alertService","onAlert","pipe","filter","success","message","options","alert","type","AlertType","error","info","warn","clear","autoClose","undefined","classificatorService","processText","title","text","resp","url","requestOptions","method","headers","authHeader","fetch","handleResponse","body","credentials","stringify","userValue","isLoggedIn","isApiUrl","startsWith","Authorization","response","data","ok","includes","status","statusText","Promise","reject","createBrowserHistory","Role","Alert","fade","useState","alerts","setAlerts","removeAlert","alertWithFade","map","cssClasses","classes","alertTypeClass","join","useEffect","subscription","subscribe","filteredAlerts","keepAfterRouteChange","forEach","historyUnlisten","listen","pathname","endsWith","unsubscribe","length","className","index","onClick","dangerouslySetInnerHTML","__html","Nav","setUser","exact","to","role","path","component","AdminNav","match","defaultProps","PrivateRoute","Component","roles","rest","render","props","indexOf","state","from","location","NewsItem","console","log","xmlns","width","height","fill","class","viewBox","fill-rule","d","AddNewsModal","validationSchema","Yup","shape","required","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","initialValues","onSubmit","setSubmitting","errors","touched","isSubmitting","autocomplete","placeholder","name","as","rows","maxlength","Button","disabled","onHide","ClassificationResultModal","classificationResult","Footer","PricingSection","Feature1Section","style","src","alt","href","Home","Login","catch","Register","firstName","lastName","min","oneOf","acceptTerms","fields","setStatus","htmlFor","VerifyEmail","EmailStatus","emailStatus","setEmailStatus","queryString","search","replace","getBody","ForgotPassword","finally","ResetPassword","TokenStatus","setToken","tokenStatus","setTokenStatus","getForm","Account","Archive","React","modalShow","setModalShow","preview","raw","setImage","display","accept","onChange","e","target","files","URL","createObjectURL","show","Update","when","schema","isDeleting","Profile","Overview","List","users","setUsers","whiteSpace","colSpan","AddEdit","isAddMode","concat","createUser","updateUser","Users","Admin","Classificator","setClassificationResult","formValues","setFormValues","classificationMap","false","true","processingResult","nextValues","maxLength","App","useLocation","slice","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5872a237.chunk.js","sourcesContent":["import { BehaviorSubject } from \"rxjs\";\n\nimport config from \"../config.json\";\nimport { fetchWrapper, history } from \"../_helpers\";\n\nconst userSubject = new BehaviorSubject(null);\nconst baseUrl = `${config.apiUrl}/accounts`;\n\nexport const accountService = {\n  login,\n  logout,\n  refreshToken,\n  register,\n  verifyEmail,\n  forgotPassword,\n  validateResetToken,\n  resetPassword,\n  getAll,\n  getById,\n  create,\n  update,\n  delete: _delete,\n  user: userSubject.asObservable(),\n  get userValue() {\n    return userSubject.value;\n  },\n};\n\nfunction login(email, password) {\n  return fetchWrapper\n    .post(`${baseUrl}/authenticate`, { email, password })\n    .then((user) => {\n      // publish user to subscribers and start timer to refresh token\n      userSubject.next(user);\n      startRefreshTokenTimer();\n      return user;\n    });\n}\n\nfunction logout() {\n  // revoke token, stop refresh timer, publish null to user subscribers and redirect to login page\n  fetchWrapper.post(`${baseUrl}/revoke-token`, {});\n  stopRefreshTokenTimer();\n  userSubject.next(null);\n  history.push(\"/account/login\");\n}\n\nfunction refreshToken() {\n  return fetchWrapper.post(`${baseUrl}/refresh-token`, {}).then((user) => {\n    // publish user to subscribers and start timer to refresh token\n    userSubject.next(user);\n    startRefreshTokenTimer();\n    return user;\n  });\n}\n\nfunction register(params) {\n  return fetchWrapper.post(`${baseUrl}/register`, params);\n}\n\nfunction verifyEmail(token) {\n  return fetchWrapper.post(`${baseUrl}/verify-email`, { token });\n}\n\nfunction forgotPassword(email) {\n  return fetchWrapper.post(`${baseUrl}/forgot-password`, { email });\n}\n\nfunction validateResetToken(token) {\n  return fetchWrapper.post(`${baseUrl}/validate-reset-token`, { token });\n}\n\nfunction resetPassword({ token, password, confirmPassword }) {\n  return fetchWrapper.post(`${baseUrl}/reset-password`, {\n    token,\n    password,\n    confirmPassword,\n  });\n}\n\nfunction getAll() {\n  return fetchWrapper.get(baseUrl);\n}\n\nfunction getById(id) {\n  return fetchWrapper.get(`${baseUrl}/${id}`);\n}\n\nfunction create(params) {\n  return fetchWrapper.post(baseUrl, params);\n}\n\nfunction update(id, params) {\n  return fetchWrapper.put(`${baseUrl}/${id}`, params).then((user) => {\n    // update stored user if the logged in user updated their own record\n    if (user.id === userSubject.value.id) {\n      // publish updated user to subscribers\n      user = { ...userSubject.value, ...user };\n      userSubject.next(user);\n    }\n    return user;\n  });\n}\n\n// prefixed with underscore because 'delete' is a reserved word in javascript\nfunction _delete(id) {\n  return fetchWrapper.delete(`${baseUrl}/${id}`).then((x) => {\n    // auto logout if the logged in user deleted their own record\n    if (id === userSubject.value.id) {\n      logout();\n    }\n    return x;\n  });\n}\n\n// helper functions\n\nlet refreshTokenTimeout;\n\nfunction startRefreshTokenTimer() {\n  // parse json object from base64 encoded jwt token\n  const jwtToken = JSON.parse(atob(userSubject.value.jwtToken.split(\".\")[1]));\n\n  // set a timeout to refresh the token a minute before it expires\n  const expires = new Date(jwtToken.exp * 1000);\n  const timeout = expires.getTime() - Date.now() - 60 * 1000;\n  refreshTokenTimeout = setTimeout(refreshToken, timeout);\n}\n\nfunction stopRefreshTokenTimer() {\n  clearTimeout(refreshTokenTimeout);\n}\n","import { Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nconst alertSubject = new Subject();\nconst defaultId = 'default-alert';\n\nexport const alertService = {\n    onAlert,\n    success,\n    error,\n    info,\n    warn,\n    alert,\n    clear\n};\n\nexport const AlertType = {\n    Success: 'Success',\n    Error: 'Error',\n    Info: 'Info',\n    Warning: 'Warning'\n}\n\n// enable subscribing to alerts observable\nfunction onAlert(id = defaultId) {\n    return alertSubject.asObservable().pipe(filter(x => x && x.id === id));\n}\n\n// convenience methods\nfunction success(message, options) {\n    alert({ ...options, type: AlertType.Success, message });\n}\n\nfunction error(message, options) {\n    alert({ ...options, type: AlertType.Error, message });\n}\n\nfunction info(message, options) {\n    alert({ ...options, type: AlertType.Info, message });\n}\n\nfunction warn(message, options) {\n    alert({ ...options, type: AlertType.Warning, message });\n}\n\n// core alert method\nfunction alert(alert) {\n    alert.id = alert.id || defaultId;\n    alert.autoClose = (alert.autoClose === undefined ? true : alert.autoClose);\n    alertSubject.next(alert);\n}\n\n// clear alerts\nfunction clear(id = defaultId) {\n    alertSubject.next({ id });\n}","import { fetchWrapper } from \"../_helpers\";\nimport { alertService } from \"../_services/alert.service\";\nimport config from \"../config.json\";\n\nconst baseUrl = `${config.apiUrl}/classificator`;\n\nexport const classificatorService = {\n  processText,\n};\n\nfunction processText(title, text) {\n  return fetchWrapper\n    .post(`${baseUrl}/process-text`, { title: title, text: text })\n    .then((resp) => {\n      alertService.success(\"Text processing success\", resp);\n      return resp;\n    });\n}\n","import config from \"../config.json\";\nimport { accountService } from \"../_services\";\n\nexport const fetchWrapper = {\n  get,\n  post,\n  put,\n  delete: _delete,\n};\n\nfunction get(url) {\n  const requestOptions = {\n    method: \"GET\",\n    headers: authHeader(url),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction post(url, body) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\n    credentials: \"include\",\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\nfunction put(url, body) {\n  const requestOptions = {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\", ...authHeader(url) },\n    body: JSON.stringify(body),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// prefixed with underscored because delete is a reserved word in javascript\nfunction _delete(url) {\n  const requestOptions = {\n    method: \"DELETE\",\n    headers: authHeader(url),\n  };\n  return fetch(url, requestOptions).then(handleResponse);\n}\n\n// helper functions\n\nfunction authHeader(url) {\n  // return auth header with jwt if user is logged in and request is to the api url\n  const user = accountService.userValue;\n  const isLoggedIn = user && user.jwtToken;\n  const isApiUrl = url.startsWith(config.apiUrl);\n  if (isLoggedIn && isApiUrl) {\n    return { Authorization: `Bearer ${user.jwtToken}` };\n  } else {\n    return {};\n  }\n}\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if ([401, 403].includes(response.status) && accountService.userValue) {\n        // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n        accountService.logout();\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","export const Role = {\n    Admin: 'Admin',\n    User: 'User'    \n}","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { alertService, AlertType } from \"../_services\";\r\nimport { history } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // subscribe to new alert notifications\r\n    const subscription = alertService.onAlert(id).subscribe((alert) => {\r\n      // clear alerts when an empty alert is received\r\n      if (!alert.message) {\r\n        setAlerts((alerts) => {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          const filteredAlerts = alerts.filter((x) => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          filteredAlerts.forEach((x) => delete x.keepAfterRouteChange);\r\n          return filteredAlerts;\r\n        });\r\n      } else {\r\n        // add alert to array\r\n        setAlerts((alerts) => [...alerts, alert]);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => removeAlert(alert), 3000);\r\n        }\r\n      }\r\n    });\r\n\r\n    // clear alerts on location change\r\n    const historyUnlisten = history.listen(({ pathname }) => {\r\n      // don't clear if pathname has trailing slash because this will be auto redirected again\r\n      if (pathname.endsWith(\"/\")) return;\r\n\r\n      alertService.clear(id);\r\n    });\r\n\r\n    // clean up function that runs when the component unmounts\r\n    return () => {\r\n      // unsubscribe & unlisten to avoid memory leaks\r\n      subscription.unsubscribe();\r\n      historyUnlisten();\r\n    };\r\n  }, []);\r\n\r\n  function removeAlert(alert) {\r\n    if (fade) {\r\n      // fade out alert\r\n      const alertWithFade = { ...alert, fade: true };\r\n      setAlerts((alerts) =>\r\n        alerts.map((x) => (x === alert ? alertWithFade : x))\r\n      );\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        setAlerts((alerts) => alerts.filter((x) => x !== alertWithFade));\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      setAlerts((alerts) => alerts.filter((x) => x !== alert));\r\n    }\r\n  }\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <a className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </a>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\n\r\nimport { Role } from \"../_helpers\";\r\nimport { accountService } from \"../_services\";\r\n\r\nfunction Nav() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const subscription = accountService.user.subscribe((x) => setUser(x));\r\n    return subscription.unsubscribe;\r\n  }, []);\r\n\r\n  // only show nav when logged in\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Main\r\n          </NavLink>\r\n          <NavLink to=\"/classificator\" className=\"nav-item nav-link\">\r\n            Classificator\r\n          </NavLink>\r\n          <NavLink to=\"/archive\" className=\"nav-item nav-link\">\r\n            Archive\r\n          </NavLink>\r\n          {user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Admin\r\n            </NavLink>\r\n          )}\r\n          <a onClick={accountService.logout} className=\"nav-item nav-link\">\r\n            Sign out\r\n          </a>\r\n        </div>\r\n      </nav>\r\n      <Route path=\"/admin\" component={AdminNav} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AdminNav({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <nav className=\"admin-nav navbar navbar-expand navbar-light\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink to={`${path}/users`} className=\"nav-item nav-link\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { accountService } from \"../_services\";\r\n\r\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        const user = accountService.userValue;\r\n        if (!user) {\r\n          // not logged in so redirect to login page with the return url\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/account/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        }\r\n\r\n        // check if route is restricted by role\r\n        if (roles && roles.indexOf(user.role) === -1) {\r\n          // role not authorized so redirect to home page\r\n          return <Redirect to={{ pathname: \"/\" }} />;\r\n        }\r\n\r\n        // authorized so return component\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport { PrivateRoute };\r\n","import React from \"react\";\n\nfunction NewsItem({ title, text }) {\n  return (\n    <div className=\"row border p-3 d-flex justify-content-between mb-2\">\n      <div className=\"col-11\">\n        <h4 className=\"text-truncate text-left\">{title}</h4>\n        <p className=\"text-left text-truncate\">{text}</p>\n      </div>\n\n      <div className=\"d-flex flex-column\">\n        <div onClick={() => console.log(\"2edwas\")} className=\"btn\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"18\"\n            height=\"18\"\n            fill=\"currentColor\"\n            class=\"bi bi-pencil\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5L13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175l-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\"\n            />\n          </svg>\n        </div>\n        <div onClick={() => console.log(\"2edwas\")} className=\"btn\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"22\"\n            height=\"22\"\n            fill=\"currentColor\"\n            class=\"bi bi-trash\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n            />\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport { NewsItem };\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nfunction AddNewsModal(props) {\n  const initialValues = {\n    title: \"\",\n    text: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    text: Yup.string().required(\"News text is required\"),\n  });\n\n  function onSubmit({ title, text }, { setSubmitting }) {\n    console.log(title, text);\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter text-center\">\n          Add your news here\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <Field\n                    autocomplete=\"off\"\n                    placeholder=\"Title\"\n                    name=\"title\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.title && touched.title ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"title\"\n                    component=\"div\"\n                    className=\"invalid-feedback text-left\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Field\n                    as=\"textarea\"\n                    rows=\"8\"\n                    maxlength=\"2000\"\n                    placeholder=\"Text\"\n                    name=\"text\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.text && touched.text ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"text\"\n                    component=\"div\"\n                    className=\"invalid-feedback text-left\"\n                  />\n                </div>\n                <div className=\"d-flex justify-content-end\">\n                  <button class=\"btn btn-link\">Cancel</button>\n                  <Button\n                    disabled={isSubmitting}\n                    className=\"btn btn-lg\"\n                    onClick={props.onHide}\n                  >\n                    {isSubmitting && (\n                      <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                    )}\n                    Save\n                  </Button>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport { AddNewsModal };\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nfunction ClassificationResultModal(props) {\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter text-center\">\n          Classification result for news:\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4>\n          This news is: <b>{props.classificationResult}</b>\n        </h4>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"btn btn-lg\" onClick={props.onHide}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport { ClassificationResultModal };\n","import React from \"react\";\n\nfunction PricingSection() {\n  return (\n    <section class=\"pricing-table\">\n      <div class=\"container\">\n        <div class=\"block-heading\">\n          <h2>Our Pricing</h2>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nunc quam\n            urna, dignissim nec auctor in, mattis vitae leo.\n          </p>\n        </div>\n        <div class=\"row justify-content-md-center\">\n          <div class=\"col-md-5 col-lg-4\">\n            <div class=\"item\">\n              <div class=\"heading\">\n                <h3>BASIC</h3>\n              </div>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              <div class=\"features\">\n                <h4>\n                  <span class=\"feature\">Full Support</span> :{\" \"}\n                  <span class=\"value\">No</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Duration</span> :{\" \"}\n                  <span class=\"value\">30 Days</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Storage</span> :{\" \"}\n                  <span class=\"value\">10GB</span>\n                </h4>\n              </div>\n              <div class=\"price\">\n                <h4>$25</h4>\n              </div>\n              <button class=\"btn btn-block btn-outline-primary\" type=\"submit\">\n                BUY NOW\n              </button>\n            </div>\n          </div>\n          <div class=\"col-md-5 col-lg-4\">\n            <div class=\"item\">\n              <div class=\"ribbon\">Best Value</div>\n              <div class=\"heading\">\n                <h3>PRO</h3>\n              </div>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              <div class=\"features\">\n                <h4>\n                  <span class=\"feature\">Full Support</span> :{\" \"}\n                  <span class=\"value\">Yes</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Duration</span> :{\" \"}\n                  <span class=\"value\">60 Days</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Storage</span> :{\" \"}\n                  <span class=\"value\">50GB</span>\n                </h4>\n              </div>\n              <div class=\"price\">\n                <h4>$50</h4>\n              </div>\n              <button class=\"btn btn-block btn-primary\" type=\"submit\">\n                BUY NOW\n              </button>\n            </div>\n          </div>\n          <div class=\"col-md-5 col-lg-4\">\n            <div class=\"item\">\n              <div class=\"heading\">\n                <h3>PREMIUM</h3>\n              </div>\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n              <div class=\"features\">\n                <h4>\n                  <span class=\"feature\">Full Support</span> :{\" \"}\n                  <span class=\"value\">Yes</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Duration</span> :{\" \"}\n                  <span class=\"value\">120 Days</span>\n                </h4>\n                <h4>\n                  <span class=\"feature\">Storage</span> :{\" \"}\n                  <span class=\"value\">150GB</span>\n                </h4>\n              </div>\n              <div class=\"price\">\n                <h4>$150</h4>\n              </div>\n              <button class=\"btn btn-block btn-outline-primary\" type=\"submit\">\n                BUY NOW\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport { PricingSection };\n","function Feature1Section() {\n  return (\n    <section className=\"bg-light\">\n      <div className=\"container\">\n        <div className=\"row align-items-center\" style={{ height: \"70vh\" }}>\n          <div className=\"col\">\n            <div className=\"row\">\n              <img\n                className=\"col-md-10\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d2/Newspaper_Cover2.svg/1200px-Newspaper_Cover2.svg.png\"\n                alt=\"Fake news\"\n              ></img>\n            </div>\n          </div>\n          <div className=\"col\">\n            <div className=\"row\">\n              <div className=\"col-md-8 d-flex flex-column align-items-start\">\n                <h1 className=\"text-left mb-4\">Save your text news!</h1>\n                <p className=\"text-left mb-5\">\n                  Explanation of why you are going to love it and the benefit!\n                </p>\n                <button\n                  class=\"btn btn-outline-secondary btn-lg\"\n                  href=\"classificator\"\n                  type=\"button\"\n                >\n                  Learn more\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport { Feature1Section };\n","import React from \"react\";\n\nimport { accountService } from \"../_services\";\nimport { PricingSection } from \"./pricing\";\nimport { Feature1Section } from \"./feature1\";\n\nfunction Home() {\n  const user = accountService.userValue;\n\n  return (\n    <div>\n      <section>\n        <div className=\"container\">\n          <div className=\"row align-items-center vh-100\">\n            <div className=\"col\">\n              <div className=\"row\">\n                <div className=\"col-md-8 d-flex flex-column align-items-start\">\n                  <h1 className=\"text-left mb-4 display-4\">\n                    It's better than sliced bread!\n                  </h1>\n                  <p className=\"text-left mb-5\">\n                    Tell the world how awesome your app is and why they should\n                    use it!!\n                  </p>\n                  <button\n                    class=\"btn btn-outline-secondary btn-lg\"\n                    href=\"classificator\"\n                    type=\"button\"\n                  >\n                    Get Started\n                  </button>\n                </div>\n              </div>\n            </div>\n            <div className=\"col\">\n              <div className=\"row\">\n                <img\n                  className=\"col-md-12 rounded\"\n                  src=\"https://cosmosmagazine.com/wp-content/uploads/2019/12/190108-fake-thumb.jpg\"\n                  alt=\"Fake news\"\n                ></img>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Feature1Section></Feature1Section>\n      <PricingSection></PricingSection>\n    </div>\n  );\n}\n\nexport { Home };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction Login({ history, location }) {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().required(\"Password is required\"),\n  });\n\n  function onSubmit({ email, password }, { setSubmitting }) {\n    alertService.clear();\n    accountService\n      .login(email, password)\n      .then(() => {\n        const { from } = location.state || { from: { pathname: \"/\" } };\n        history.push(from);\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <section className=\"container-fluid\">\n      <div className=\"row vh-100\">\n        <div className=\"col-md-6 d-flex flex-column justify-content-center\">\n          <div className=\"row d-flex align-items-center justify-content-center\">\n            <img\n              className=\"col-md-10 mb-5\"\n              src=\"https://assets.publishing.service.gov.uk/government/uploads/system/uploads/image_data/file/58915/s960_newspapers-pile-960x640.jpg\"\n            ></img>\n          </div>\n          <div className=\"row d-flex flex-column align-items-center\">\n            <div className=\"col-md-10\">\n              <h1 className=\"mb-4\">News classificator app</h1>\n              <p>\n                Tell the world how awesome your app is and why they should use\n                it!!Tell the world how awesome your app is and why they should\n                use it!!\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 d-flex align-items-center justify-content-center bg-light\">\n          <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n          >\n            {({ errors, touched, isSubmitting }) => (\n              <Form>\n                <h1 className=\"display-4 m-0\">Welcome back!</h1>\n                <div className=\"d-flex align-items-baseline justify-content-center\">\n                  <p>Don't have an account? </p>\n                  <Link to=\"register\" className=\"btn btn-link p-0 pl-2\">\n                    Register\n                  </Link>\n                </div>\n                <div className=\"card-body\">\n                  <div className=\"form-group\">\n                    <Field\n                      placeholder=\"Email\"\n                      name=\"email\"\n                      type=\"text\"\n                      className={\n                        \"form-control\" +\n                        (errors.email && touched.email ? \" is-invalid\" : \"\")\n                      }\n                    />\n                    <ErrorMessage\n                      name=\"email\"\n                      component=\"div\"\n                      className=\"invalid-feedback text-left\"\n                    />\n                  </div>\n                  <div className=\"form-group\">\n                    <Field\n                      placeholder=\"Password\"\n                      name=\"password\"\n                      type=\"password\"\n                      className={\n                        \"form-control\" +\n                        (errors.password && touched.password\n                          ? \" is-invalid\"\n                          : \"\")\n                      }\n                    />\n                    <ErrorMessage\n                      name=\"password\"\n                      component=\"div\"\n                      className=\"invalid-feedback text-left\"\n                    />\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col d-flex justify-content-start\">\n                      <button\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        className=\"btn btn-primary\"\n                      >\n                        {isSubmitting && (\n                          <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                        )}\n                        Login\n                      </button>\n                    </div>\n                    <div className=\"form-group col text-right\">\n                      <Link to=\"forgot-password\" className=\"btn btn-link pr-0\">\n                        Forgot Password?\n                      </Link>\n                    </div>\n                  </div>\n                </div>\n              </Form>\n            )}\n          </Formik>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport { Login };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction Register({ history }) {\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    acceptTerms: false,\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string()\n      .min(6, \"Password must be at least 6 characters\")\n      .required(\"Password is required\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n      .required(\"Confirm Password is required\"),\n    acceptTerms: Yup.bool().oneOf(\n      [true],\n      \"Accept Terms & Conditions is required\"\n    ),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    accountService\n      .register(fields)\n      .then(() => {\n        alertService.success(\n          \"Registration successful, please check your email for verification instructions\",\n          { keepAfterRouteChange: true }\n        );\n        history.push(\"login\");\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className=\"card-header\">Register</h3>\n          <div className=\"card-body\">\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <label>Title</label>\n                <Field\n                  name=\"title\"\n                  as=\"select\"\n                  className={\n                    \"form-control\" +\n                    (errors.title && touched.title ? \" is-invalid\" : \"\")\n                  }\n                >\n                  <option value=\"\"></option>\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                </Field>\n                <ErrorMessage\n                  name=\"title\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col-5\">\n                <label>First Name</label>\n                <Field\n                  name=\"firstName\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"firstName\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col-5\">\n                <label>Last Name</label>\n                <Field\n                  name=\"lastName\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"lastName\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label>Email</label>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <label>Password</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col\">\n                <label>Confirm Password</label>\n                <Field\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.confirmPassword && touched.confirmPassword\n                      ? \" is-invalid\"\n                      : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"confirmPassword\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group form-check\">\n              <Field\n                type=\"checkbox\"\n                name=\"acceptTerms\"\n                id=\"acceptTerms\"\n                className={\n                  \"form-check-input \" +\n                  (errors.acceptTerms && touched.acceptTerms\n                    ? \" is-invalid\"\n                    : \"\")\n                }\n              />\n              <label htmlFor=\"acceptTerms\" className=\"form-check-label\">\n                Accept Terms & Conditions\n              </label>\n              <ErrorMessage\n                name=\"acceptTerms\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"btn btn-primary\"\n              >\n                {isSubmitting && (\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                )}\n                Register\n              </button>\n              <Link to=\"login\" className=\"btn btn-link\">\n                Cancel\n              </Link>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport { Register };\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction VerifyEmail({ history, location }) {\n  const EmailStatus = {\n    Verifying: \"Verifying\",\n    Failed: \"Failed\",\n  };\n\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n\n    accountService\n      .verifyEmail(token)\n      .then(() => {\n        alertService.success(\"Verification successful, you can now login\", {\n          keepAfterRouteChange: true,\n        });\n        history.push(\"login\");\n      })\n      .catch(() => {\n        setEmailStatus(EmailStatus.Failed);\n      });\n  }, []);\n\n  function getBody() {\n    switch (emailStatus) {\n      case EmailStatus.Verifying:\n        return <div>Verifying...</div>;\n      case EmailStatus.Failed:\n        return (\n          <div>\n            Verification failed, you can also verify your account using the{\" \"}\n            <Link to=\"forgot-password\">forgot password</Link> page.\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div>\n      <h3 className=\"card-header\">Verify Email</h3>\n      <div className=\"card-body\">{getBody()}</div>\n    </div>\n  );\n}\n\nexport { VerifyEmail };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction ForgotPassword() {\n  const initialValues = {\n    email: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n  });\n\n  function onSubmit({ email }, { setSubmitting }) {\n    alertService.clear();\n    accountService\n      .forgotPassword(email)\n      .then(() =>\n        alertService.success(\n          \"Please check your email for password reset instructions\"\n        )\n      )\n      .catch((error) => alertService.error(error))\n      .finally(() => setSubmitting(false));\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h3 className=\"card-header\">Forgot Password</h3>\n          <div className=\"card-body\">\n            <div className=\"form-group\">\n              <label>Email</label>\n              <Field\n                name=\"email\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.email && touched.email ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"btn btn-primary\"\n                >\n                  {isSubmitting && (\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                  )}\n                  Submit\n                </button>\n                <Link to=\"login\" className=\"btn btn-link\">\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport { ForgotPassword };\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction ResetPassword({ history, location }) {\n  const TokenStatus = {\n    Validating: \"Validating\",\n    Valid: \"Valid\",\n    Invalid: \"Invalid\",\n  };\n\n  const [token, setToken] = useState(null);\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n\n    accountService\n      .validateResetToken(token)\n      .then(() => {\n        setToken(token);\n        setTokenStatus(TokenStatus.Valid);\n      })\n      .catch(() => {\n        setTokenStatus(TokenStatus.Invalid);\n      });\n  }, []);\n\n  function getForm() {\n    const initialValues = {\n      password: \"\",\n      confirmPassword: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n      password: Yup.string()\n        .min(6, \"Password must be at least 6 characters\")\n        .required(\"Password is required\"),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n        .required(\"Confirm Password is required\"),\n    });\n\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\n      alertService.clear();\n      accountService\n        .resetPassword({ token, password, confirmPassword })\n        .then(() => {\n          alertService.success(\"Password reset successful, you can now login\", {\n            keepAfterRouteChange: true,\n          });\n          history.push(\"login\");\n        })\n        .catch((error) => {\n          setSubmitting(false);\n          alertService.error(error);\n        });\n    }\n\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm Password</label>\n              <Field\n                name=\"confirmPassword\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.confirmPassword && touched.confirmPassword\n                    ? \" is-invalid\"\n                    : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"confirmPassword\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"btn btn-primary\"\n                >\n                  {isSubmitting && (\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                  )}\n                  Reset Password\n                </button>\n                <Link to=\"/login\" className=\"btn btn-link\">\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n\n  function getBody() {\n    switch (tokenStatus) {\n      case TokenStatus.Valid:\n        return getForm();\n      case TokenStatus.Invalid:\n        return (\n          <div>\n            Token validation failed, if the token has expired you can get a new\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\n          </div>\n        );\n      case TokenStatus.Validating:\n        return <div>Validating token...</div>;\n    }\n  }\n\n  return (\n    <div>\n      <h3 className=\"card-header\">Reset Password</h3>\n      <div className=\"card-body\">{getBody()}</div>\n    </div>\n  );\n}\n\nexport { ResetPassword };\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { accountService } from \"../_services\";\n\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { VerifyEmail } from \"./VerifyEmail\";\nimport { ForgotPassword } from \"./ForgotPassword\";\nimport { ResetPassword } from \"./ResetPassword\";\n\nfunction Account({ history, match }) {\n  const { path } = match;\n\n  useEffect(() => {\n    // redirect to home if already logged in\n    if (accountService.userValue) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route path={`${path}/login`} component={Login} />\n      <Route path={`${path}/register`} component={Register} />\n      <Route path={`${path}/verify-email`} component={VerifyEmail} />\n      <Route path={`${path}/forgot-password`} component={ForgotPassword} />\n      <Route path={`${path}/reset-password`} component={ResetPassword} />\n    </Switch>\n  );\n}\n\nexport { Account };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { NewsItem, AddNewsModal } from \"../_components\";\nimport { accountService } from \"../_services\";\n\nfunction Archive({ match }) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [image, setImage] = React.useState({ preview: \"\", raw: \"\" });\n\n  const items = [\n    {\n      title: `Bar worker: 'I've lost hundreds of pounds in tips during lockdowns`,\n      text: `Hospitality businesses have been hit hard by lockdowns and restrictions caused by Covid-19. But what’s it been like for the workers on the front line of an industry dependent on people socialising? Bartender Barney Burns, who works at a hotel restaurant`,\n    },\n    {\n      title: `Spain PM tests negative for Covid`,\n      text: `Spain's Prime Minister Pedro Sánchez has tested negative for Covid-19, the Spanish government says. Sánchez is in self-isolation because of his recent contact with French President Emmanuel Macron who had a positive test. The Spanish PM will remain in quarantine until 24 December, his office said.`,\n    },\n  ];\n\n  const handleChange = (e) => {\n    if (e.target.files.length) {\n      setImage({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n      });\n    }\n  };\n\n  return (\n    <div className=\"container d-flex flex-column justify-content-start\">\n      <h1 className=\"mb-4\">Here is list of your saved news:</h1>\n      <div className=\"d-flex justify-content-between align-items-center\">\n        <div onClick={() => setModalShow(true)} className=\"btn d-flex p-0\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"25\"\n            height=\"25\"\n            fill=\"currentColor\"\n            class=\"bi bi-plus\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              fill-rule=\"evenodd\"\n              d=\"M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z\"\n            />\n          </svg>\n          <p>Add new</p>\n        </div>\n        <label htmlFor=\"upload-button\">\n          <div className=\"btn d-flex p-0\">\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"20\"\n              height=\"20\"\n              fill=\"currentColor\"\n              class=\"bi bi-file-earmark-arrow-up\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path d=\"M4 0h5.5v1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h1V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z\" />\n              <path d=\"M9.5 3V0L14 4.5h-3A1.5 1.5 0 0 1 9.5 3z\" />\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M8 12a.5.5 0 0 0 .5-.5V7.707l1.146 1.147a.5.5 0 0 0 .708-.708l-2-2a.5.5 0 0 0-.708 0l-2 2a.5.5 0 1 0 .708.708L7.5 7.707V11.5a.5.5 0 0 0 .5.5z\"\n              />\n            </svg>\n            <p className=\"pl-1\">Upload .csv file</p>\n          </div>\n        </label>\n        <input\n          type=\"file\"\n          id=\"upload-button\"\n          style={{ display: \"none\" }}\n          accept=\".csv\"\n          onChange={handleChange}\n        />\n      </div>\n      {items.map((value, index) => {\n        return <NewsItem title={value.title} text={value.text} />;\n      })}\n      <AddNewsModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      ></AddNewsModal>\n    </div>\n  );\n}\n\nexport { Archive };\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction Update({ history }) {\n  const user = accountService.userValue;\n  const initialValues = {\n    title: user.title,\n    firstName: user.firstName,\n    lastName: user.lastName,\n    email: user.email,\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\"),\n    confirmPassword: Yup.string()\n      .when(\"password\", (password, schema) => {\n        if (password) return schema.required(\"Confirm Password is required\");\n      })\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    accountService\n      .update(user.id, fields)\n      .then(() => {\n        alertService.success(\"Update successful\", {\n          keepAfterRouteChange: true,\n        });\n        history.push(\".\");\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  const [isDeleting, setIsDeleting] = useState(false);\n  function onDelete() {\n    // if (confirm(\"Are you sure?\")) {\n    //   setIsDeleting(true);\n    //   accountService\n    //     .delete(user.id)\n    //     .then(() => alertService.success(\"Account deleted successfully\"));\n    // }\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {({ errors, touched, isSubmitting }) => (\n        <Form>\n          <h1>Update Profile</h1>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <label>Title</label>\n              <Field\n                name=\"title\"\n                as=\"select\"\n                className={\n                  \"form-control\" +\n                  (errors.title && touched.title ? \" is-invalid\" : \"\")\n                }\n              >\n                <option value=\"\"></option>\n                <option value=\"Mr\">Mr</option>\n                <option value=\"Mrs\">Mrs</option>\n                <option value=\"Miss\">Miss</option>\n                <option value=\"Ms\">Ms</option>\n              </Field>\n              <ErrorMessage\n                name=\"title\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group col-5\">\n              <label>First Name</label>\n              <Field\n                name=\"firstName\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"firstName\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group col-5\">\n              <label>Last Name</label>\n              <Field\n                name=\"lastName\"\n                type=\"text\"\n                className={\n                  \"form-control\" +\n                  (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"lastName\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Email</label>\n            <Field\n              name=\"email\"\n              type=\"text\"\n              className={\n                \"form-control\" +\n                (errors.email && touched.email ? \" is-invalid\" : \"\")\n              }\n            />\n            <ErrorMessage\n              name=\"email\"\n              component=\"div\"\n              className=\"invalid-feedback\"\n            />\n          </div>\n          <h3 className=\"pt-3\">Change Password</h3>\n          <p>Leave blank to keep the same password</p>\n          <div className=\"form-row\">\n            <div className=\"form-group col\">\n              <label>Password</label>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group col\">\n              <label>Confirm Password</label>\n              <Field\n                name=\"confirmPassword\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.confirmPassword && touched.confirmPassword\n                    ? \" is-invalid\"\n                    : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"confirmPassword\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <button\n              type=\"submit\"\n              disabled={isSubmitting}\n              className=\"btn btn-primary mr-2\"\n            >\n              {isSubmitting && (\n                <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n              )}\n              Update\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => onDelete()}\n              className=\"btn btn-danger\"\n              style={{ width: \"75px\" }}\n              disabled={isDeleting}\n            >\n              {isDeleting ? (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              ) : (\n                <span>Delete</span>\n              )}\n            </button>\n            <Link to=\".\" className=\"btn btn-link\">\n              Cancel\n            </Link>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nexport { Update };\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { Archive } from \"./Archive\";\nimport { Update } from \"./Update\";\n\nfunction Profile({ match }) {\n  const { path } = match;\n\n  return (\n    <div className=\"p-4\">\n      <div className=\"container\">\n        <Switch>\n          <Route exact path={path} component={Archive} />\n          <Route path={`${path}/update`} component={Update} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport { Profile };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Overview({ match }) {\n    const { path } = match;\n\n    return (\n        <div>\n            <h1>Admin</h1>\n            <p>This section can only be accessed by administrators.</p>\n            <p><Link to={`${path}/users`}>Manage Users</Link></p>\n        </div>\n    );\n}\n\nexport { Overview };","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { accountService } from \"../../_services\";\n\nfunction List({ match }) {\n  const { path } = match;\n  const [users, setUsers] = useState(null);\n\n  useEffect(() => {\n    accountService.getAll().then((x) => setUsers(x));\n  }, []);\n\n  function deleteUser(id) {\n    setUsers(\n      users.map((x) => {\n        if (x.id === id) {\n          x.isDeleting = true;\n        }\n        return x;\n      })\n    );\n    accountService.delete(id).then(() => {\n      setUsers((users) => users.filter((x) => x.id !== id));\n    });\n  }\n\n  return (\n    <div>\n      <h1>Users</h1>\n      <p>All users from secure (admin only) api end point:</p>\n      <Link to={`${path}/add`} className=\"btn btn-sm btn-success mb-2\">\n        Add User\n      </Link>\n      <table className=\"table table-striped\">\n        <thead>\n          <tr>\n            <th style={{ width: \"30%\" }}>Name</th>\n            <th style={{ width: \"30%\" }}>Email</th>\n            <th style={{ width: \"30%\" }}>Role</th>\n            <th style={{ width: \"10%\" }}></th>\n          </tr>\n        </thead>\n        <tbody>\n          {users &&\n            users.map((user) => (\n              <tr key={user.id}>\n                <td>\n                  {user.title} {user.firstName} {user.lastName}\n                </td>\n                <td>{user.email}</td>\n                <td>{user.role}</td>\n                <td style={{ whiteSpace: \"nowrap\" }}>\n                  <Link\n                    to={`${path}/edit/${user.id}`}\n                    className=\"btn btn-sm btn-primary mr-1\"\n                  >\n                    Edit\n                  </Link>\n                  <button\n                    onClick={() => deleteUser(user.id)}\n                    className=\"btn btn-sm btn-danger\"\n                    style={{ width: \"60px\" }}\n                    disabled={user.isDeleting}\n                  >\n                    {user.isDeleting ? (\n                      <span className=\"spinner-border spinner-border-sm\"></span>\n                    ) : (\n                      <span>Delete</span>\n                    )}\n                  </button>\n                </td>\n              </tr>\n            ))}\n          {!users && (\n            <tr>\n              <td colSpan=\"4\" className=\"text-center\">\n                <span className=\"spinner-border spinner-border-lg align-center\"></span>\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport { List };\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../../_services\";\n\nfunction AddEdit({ history, match }) {\n  const { id } = match.params;\n  const isAddMode = !id;\n\n  const initialValues = {\n    title: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    role: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    firstName: Yup.string().required(\"First Name is required\"),\n    lastName: Yup.string().required(\"Last Name is required\"),\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\n    role: Yup.string().required(\"Role is required\"),\n    password: Yup.string()\n      .concat(isAddMode ? Yup.string().required(\"Password is required\") : null)\n      .min(6, \"Password must be at least 6 characters\"),\n    confirmPassword: Yup.string()\n      .when(\"password\", (password, schema) => {\n        if (password) return schema.required(\"Confirm Password is required\");\n      })\n      .oneOf([Yup.ref(\"password\")], \"Passwords must match\"),\n  });\n\n  function onSubmit(fields, { setStatus, setSubmitting }) {\n    setStatus();\n    if (isAddMode) {\n      createUser(fields, setSubmitting);\n    } else {\n      updateUser(id, fields, setSubmitting);\n    }\n  }\n\n  function createUser(fields, setSubmitting) {\n    accountService\n      .create(fields)\n      .then(() => {\n        alertService.success(\"User added successfully\", {\n          keepAfterRouteChange: true,\n        });\n        history.push(\".\");\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  function updateUser(id, fields, setSubmitting) {\n    accountService\n      .update(id, fields)\n      .then(() => {\n        alertService.success(\"Update successful\", {\n          keepAfterRouteChange: true,\n        });\n        history.push(\"..\");\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n    >\n      {/* {({ errors, touched, isSubmitting, setFieldValue }) => {\n        useEffect(() => {\n          if (!isAddMode) {\n            // get user and set form fields\n            accountService.getById(id).then((user) => {\n              const fields = [\n                \"title\",\n                \"firstName\",\n                \"lastName\",\n                \"email\",\n                \"role\",\n              ];\n              fields.forEach((field) =>\n                setFieldValue(field, user[field], false)\n              );\n            });\n          }\n        }, []);\n\n        return (\n          <Form>\n            <h1>{isAddMode ? \"Add User\" : \"Edit User\"}</h1>\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <label>Title</label>\n                <Field\n                  name=\"title\"\n                  as=\"select\"\n                  className={\n                    \"form-control\" +\n                    (errors.title && touched.title ? \" is-invalid\" : \"\")\n                  }\n                >\n                  <option value=\"\"></option>\n                  <option value=\"Mr\">Mr</option>\n                  <option value=\"Mrs\">Mrs</option>\n                  <option value=\"Miss\">Miss</option>\n                  <option value=\"Ms\">Ms</option>\n                </Field>\n                <ErrorMessage\n                  name=\"title\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col-5\">\n                <label>First Name</label>\n                <Field\n                  name=\"firstName\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.firstName && touched.firstName ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"firstName\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col-5\">\n                <label>Last Name</label>\n                <Field\n                  name=\"lastName\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.lastName && touched.lastName ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"lastName\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col-7\">\n                <label>Email</label>\n                <Field\n                  name=\"email\"\n                  type=\"text\"\n                  className={\n                    \"form-control\" +\n                    (errors.email && touched.email ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"email\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col\">\n                <label>Role</label>\n                <Field\n                  name=\"role\"\n                  as=\"select\"\n                  className={\n                    \"form-control\" +\n                    (errors.role && touched.role ? \" is-invalid\" : \"\")\n                  }\n                >\n                  <option value=\"\"></option>\n                  <option value=\"User\">User</option>\n                  <option value=\"Admin\">Admin</option>\n                </Field>\n                <ErrorMessage\n                  name=\"role\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n            {!isAddMode && (\n              <div>\n                <h3 className=\"pt-3\">Change Password</h3>\n                <p>Leave blank to keep the same password</p>\n              </div>\n            )}\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <label>Password</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n              <div className=\"form-group col\">\n                <label>Confirm Password</label>\n                <Field\n                  name=\"confirmPassword\"\n                  type=\"password\"\n                  className={\n                    \"form-control\" +\n                    (errors.confirmPassword && touched.confirmPassword\n                      ? \" is-invalid\"\n                      : \"\")\n                  }\n                />\n                <ErrorMessage\n                  name=\"confirmPassword\"\n                  component=\"div\"\n                  className=\"invalid-feedback\"\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <button\n                type=\"submit\"\n                disabled={isSubmitting}\n                className=\"btn btn-primary\"\n              >\n                {isSubmitting && (\n                  <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                )}\n                Save\n              </button>\n              <Link to={isAddMode ? \".\" : \"..\"} className=\"btn btn-link\">\n                Cancel\n              </Link>\n            </div>\n          </Form>\n        );\n      }} */}\n    </Formik>\n  );\n}\n\nexport { AddEdit };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { List } from './List';\nimport { AddEdit } from './AddEdit';\n\nfunction Users({ match }) {\n    const { path } = match;\n    \n    return (\n        <Switch>\n            <Route exact path={path} component={List} />\n            <Route path={`${path}/add`} component={AddEdit} />\n            <Route path={`${path}/edit/:id`} component={AddEdit} />\n        </Switch>\n    );\n}\n\nexport { Users };","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Overview } from './Overview';\nimport { Users } from './users';\n\nfunction Admin({ match }) {\n    const { path } = match;\n\n    return (\n        <div className=\"p-4\">\n            <div className=\"container\">\n                <Switch>\n                    <Route exact path={path} component={Overview} />\n                    <Route path={`${path}/users`} component={Users} />\n                </Switch>\n            </div>\n        </div>\n    );\n}\n\nexport { Admin };","import React from \"react\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ClassificationResultModal } from \"../_components\";\nimport { alertService, classificatorService } from \"../_services\";\n\nfunction Classificator({ history, location }) {\n  const [modalShow, setModalShow] = React.useState(false);\n  const [classificationResult, setClassificationResult] = React.useState();\n\n  const [formValues, setFormValues] = React.useState({\n    title: \"\",\n    text: \"\",\n  });\n\n  const classificationMap = {\n    false: \"Fake\",\n    true: \"Real\",\n  };\n\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required(\"Title is required\"),\n    text: Yup.string().required(\"News text is required\"),\n  });\n\n  function onSubmit({ title, text }, { setSubmitting }) {\n    alertService.clear();\n    classificatorService\n      .processText(title, text)\n      .then((resp) => {\n        setModalShow(true);\n        setClassificationResult(classificationMap[resp.processingResult]);\n        setSubmitting(false);\n      })\n      .catch((error) => {\n        setSubmitting(false);\n        alertService.error(error);\n      });\n  }\n\n  return (\n    <section className=\"vh-100\">\n      <div className=\"container\">\n        <h1 className=\"display-4 pt-5\">News classificator</h1>\n        <Formik\n          initialValues={formValues}\n          validationSchema={validationSchema}\n          onSubmit={onSubmit}\n          onChange={({ nextValues }) => {\n            setFormValues(setFormValues);\n          }}\n        >\n          {({ errors, touched, isSubmitting }) => (\n            <Form>\n              <div className=\"card-body\">\n                <div className=\"form-group\">\n                  <Field\n                    placeholder=\"Title\"\n                    autocomplete=\"off\"\n                    name=\"title\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.title && touched.title ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"title\"\n                    component=\"div\"\n                    className=\"invalid-feedback text-left\"\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <Field\n                    as=\"textarea\"\n                    rows=\"14\"\n                    maxLength=\"2000\"\n                    placeholder=\"Text\"\n                    name=\"text\"\n                    type=\"text\"\n                    className={\n                      \"form-control\" +\n                      (errors.text && touched.text ? \" is-invalid\" : \"\")\n                    }\n                  />\n                  <ErrorMessage\n                    name=\"text\"\n                    component=\"div\"\n                    className=\"invalid-feedback text-left\"\n                  />\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"form-group col d-flex justify-content-start\">\n                    <button\n                      type=\"submit\"\n                      disabled={isSubmitting}\n                      className=\"btn btn-outline-primary btn-lg\"\n                    >\n                      {isSubmitting && (\n                        <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                      )}\n                      Classify text\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n      <ClassificationResultModal\n        classificationResult={classificationResult}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </section>\n  );\n}\n\nexport { Classificator };\n","import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\nimport { Nav, Alert, PrivateRoute } from \"./_components\";\nimport { accountService } from \"./_services\";\nimport { Home } from \"./home\";\nimport { Account } from \"./account\";\nimport { Profile } from \"./profile\";\nimport { Admin } from \"./admin\";\nimport { Classificator } from \"./classificator\";\nimport { Role } from \"./_helpers\";\nimport \"./App.css\";\n\nfunction App() {\n  const { pathname } = useLocation();\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const subscription = accountService.user.subscribe((x) => setUser(x));\n    return subscription.unsubscribe;\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Alert></Alert>\n      <Switch>\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n        <PrivateRoute exact path=\"/\" component={Home} />\n        <PrivateRoute path=\"/classificator\" component={Classificator} />\n        <PrivateRoute path=\"/archive\" component={Profile} />\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\n        <Route path=\"/account\" component={Account} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { render } from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { history } from \"./_helpers\";\nimport { accountService } from \"./_services\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import { configureFakeBackend } from \"./_helpers\";\n// configureFakeBackend();\n\naccountService.refreshToken().finally(startApp);\n\nfunction startApp() {\n  render(\n    <React.StrictMode>\n      <HashRouter history={history}>\n        <App />\n      </HashRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n  );\n}\n"],"sourceRoot":""}