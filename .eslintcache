[{"/Users/nazar/Desktop/news-classifier-client/src/reportWebVitals.js":"1","/Users/nazar/Desktop/news-classifier-client/src/index.js":"2","/Users/nazar/Desktop/news-classifier-client/src/App.js":"3","/Users/nazar/Desktop/news-classifier-client/src/_components/Alert.jsx":"4","/Users/nazar/Desktop/news-classifier-client/src/_helpers/fetch-wrapper.js":"5","/Users/nazar/Desktop/news-classifier-client/src/_services/index.js":"6","/Users/nazar/Desktop/news-classifier-client/src/_services/account.service.js":"7","/Users/nazar/Desktop/news-classifier-client/src/_components/index.js":"8","/Users/nazar/Desktop/news-classifier-client/src/_helpers/index.js":"9","/Users/nazar/Desktop/news-classifier-client/src/_helpers/role.js":"10","/Users/nazar/Desktop/news-classifier-client/src/_services/alert.service.js":"11","/Users/nazar/Desktop/news-classifier-client/src/_components/PrivateRoute.jsx":"12","/Users/nazar/Desktop/news-classifier-client/src/home/index.js":"13","/Users/nazar/Desktop/news-classifier-client/src/account/index.js":"14","/Users/nazar/Desktop/news-classifier-client/src/_components/Nav.jsx":"15","/Users/nazar/Desktop/news-classifier-client/src/account/Login.jsx":"16","/Users/nazar/Desktop/news-classifier-client/src/account/ForgotPassword.jsx":"17","/Users/nazar/Desktop/news-classifier-client/src/account/ResetPassword.jsx":"18","/Users/nazar/Desktop/news-classifier-client/src/account/Register.jsx":"19","/Users/nazar/Desktop/news-classifier-client/src/account/VerifyEmail.jsx":"20","/Users/nazar/Desktop/news-classifier-client/src/_helpers/history.js":"21","/Users/nazar/Desktop/news-classifier-client/src/_helpers/fake-backend.js":"22","/Users/nazar/Desktop/news-classifier-client/src/admin/users/List.jsx":"23","/Users/nazar/Desktop/news-classifier-client/src/admin/users/AddEdit.jsx":"24","/Users/nazar/Desktop/news-classifier-client/src/admin/users/index.js":"25","/Users/nazar/Desktop/news-classifier-client/src/admin/Overview.jsx":"26","/Users/nazar/Desktop/news-classifier-client/src/_services/classificator.service.js":"27","/Users/nazar/Desktop/news-classifier-client/src/admin/index.js":"28","/Users/nazar/Desktop/news-classifier-client/src/classificator/index.js":"29","/Users/nazar/Desktop/news-classifier-client/src/profile/Details.jsx":"30","/Users/nazar/Desktop/news-classifier-client/src/profile/Update.jsx":"31","/Users/nazar/Desktop/news-classifier-client/src/profile/index.js":"32"},{"size":362,"mtime":1607188205595,"results":"33","hashOfConfig":"34"},{"size":764,"mtime":1607198048449,"results":"35","hashOfConfig":"34"},{"size":1284,"mtime":1607197305693,"results":"36","hashOfConfig":"34"},{"size":3329,"mtime":1607194596177,"results":"37","hashOfConfig":"34"},{"size":1934,"mtime":1607194219894,"results":"38","hashOfConfig":"34"},{"size":109,"mtime":1607197813436,"results":"39","hashOfConfig":"34"},{"size":3399,"mtime":1607194255151,"results":"40","hashOfConfig":"34"},{"size":80,"mtime":1607194708817,"results":"41","hashOfConfig":"34"},{"size":116,"mtime":1607196564924,"results":"42","hashOfConfig":"34"},{"size":64,"mtime":1597771662275,"results":"43","hashOfConfig":"34"},{"size":1221,"mtime":1597771662275,"results":"44","hashOfConfig":"34"},{"size":1006,"mtime":1607194735032,"results":"45","hashOfConfig":"34"},{"size":345,"mtime":1607195007594,"results":"46","hashOfConfig":"34"},{"size":1327,"mtime":1607195255537,"results":"47","hashOfConfig":"34"},{"size":1696,"mtime":1607194068829,"results":"48","hashOfConfig":"34"},{"size":3068,"mtime":1607195224739,"results":"49","hashOfConfig":"34"},{"size":2256,"mtime":1607195218003,"results":"50","hashOfConfig":"34"},{"size":4512,"mtime":1607195430721,"results":"51","hashOfConfig":"34"},{"size":6837,"mtime":1607195234770,"results":"52","hashOfConfig":"34"},{"size":1438,"mtime":1607195438615,"results":"53","hashOfConfig":"34"},{"size":95,"mtime":1597771662274,"results":"54","hashOfConfig":"34"},{"size":14218,"mtime":1607196641076,"results":"55","hashOfConfig":"34"},{"size":2528,"mtime":1607197172507,"results":"56","hashOfConfig":"34"},{"size":8247,"mtime":1607201760696,"results":"57","hashOfConfig":"34"},{"size":471,"mtime":1607197671327,"results":"58","hashOfConfig":"34"},{"size":366,"mtime":1597771662277,"results":"59","hashOfConfig":"34"},{"size":511,"mtime":1607198114905,"results":"60","hashOfConfig":"34"},{"size":543,"mtime":1607197653743,"results":"61","hashOfConfig":"34"},{"size":877,"mtime":1607197773617,"results":"62","hashOfConfig":"34"},{"size":540,"mtime":1607197747248,"results":"63","hashOfConfig":"34"},{"size":6552,"mtime":1607198301117,"results":"64","hashOfConfig":"34"},{"size":487,"mtime":1607198133779,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"fhhkkj",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"71"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"85"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"85"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"85"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"75"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nazar/Desktop/news-classifier-client/src/reportWebVitals.js",[],["143","144"],"/Users/nazar/Desktop/news-classifier-client/src/index.js",[],["145","146"],"/Users/nazar/Desktop/news-classifier-client/src/App.js",["147"],"import React, { useState, useEffect } from \"react\";\nimport { Route, Switch, Redirect, useLocation } from \"react-router-dom\";\nimport { Nav, Alert, PrivateRoute } from \"./_components\";\nimport { accountService } from \"./_services\";\nimport { Home } from \"./home\";\nimport { Account } from \"./account\";\nimport { Profile } from \"./profile\";\nimport { Admin } from \"./admin\";\nimport { Classificator } from \"./classificator\";\nimport { Role } from \"./_helpers\";\nimport \"./App.css\";\n\nfunction App() {\n  const { pathname } = useLocation();\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const subscription = accountService.user.subscribe((x) => setUser(x));\n    return subscription.unsubscribe;\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Alert></Alert>\n      <Switch>\n        <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n        <PrivateRoute exact path=\"/\" component={Home} />\n        <PrivateRoute path=\"/classificator\" component={Classificator} />\n        <PrivateRoute path=\"/archive\" component={Profile} />\n        <PrivateRoute path=\"/admin\" roles={[Role.Admin]} component={Admin} />\n        <Route path=\"/account\" component={Account} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n",["148","149"],"/Users/nazar/Desktop/news-classifier-client/src/_components/Alert.jsx",["150","151"],"import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { alertService, AlertType } from \"../_services\";\r\nimport { history } from \"../_helpers\";\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  fade: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  id: \"default-alert\",\r\n  fade: true,\r\n};\r\n\r\nfunction Alert({ id, fade }) {\r\n  const [alerts, setAlerts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // subscribe to new alert notifications\r\n    const subscription = alertService.onAlert(id).subscribe((alert) => {\r\n      // clear alerts when an empty alert is received\r\n      if (!alert.message) {\r\n        setAlerts((alerts) => {\r\n          // filter out alerts without 'keepAfterRouteChange' flag\r\n          const filteredAlerts = alerts.filter((x) => x.keepAfterRouteChange);\r\n\r\n          // remove 'keepAfterRouteChange' flag on the rest\r\n          filteredAlerts.forEach((x) => delete x.keepAfterRouteChange);\r\n          return filteredAlerts;\r\n        });\r\n      } else {\r\n        // add alert to array\r\n        setAlerts((alerts) => [...alerts, alert]);\r\n\r\n        // auto close alert if required\r\n        if (alert.autoClose) {\r\n          setTimeout(() => removeAlert(alert), 3000);\r\n        }\r\n      }\r\n    });\r\n\r\n    // clear alerts on location change\r\n    const historyUnlisten = history.listen(({ pathname }) => {\r\n      // don't clear if pathname has trailing slash because this will be auto redirected again\r\n      if (pathname.endsWith(\"/\")) return;\r\n\r\n      alertService.clear(id);\r\n    });\r\n\r\n    // clean up function that runs when the component unmounts\r\n    return () => {\r\n      // unsubscribe & unlisten to avoid memory leaks\r\n      subscription.unsubscribe();\r\n      historyUnlisten();\r\n    };\r\n  }, []);\r\n\r\n  function removeAlert(alert) {\r\n    if (fade) {\r\n      // fade out alert\r\n      const alertWithFade = { ...alert, fade: true };\r\n      setAlerts((alerts) =>\r\n        alerts.map((x) => (x === alert ? alertWithFade : x))\r\n      );\r\n\r\n      // remove alert after faded out\r\n      setTimeout(() => {\r\n        setAlerts((alerts) => alerts.filter((x) => x !== alertWithFade));\r\n      }, 250);\r\n    } else {\r\n      // remove alert\r\n      setAlerts((alerts) => alerts.filter((x) => x !== alert));\r\n    }\r\n  }\r\n\r\n  function cssClasses(alert) {\r\n    if (!alert) return;\r\n\r\n    const classes = [\"alert\", \"alert-dismissable\"];\r\n\r\n    const alertTypeClass = {\r\n      [AlertType.Success]: \"alert alert-success\",\r\n      [AlertType.Error]: \"alert alert-danger\",\r\n      [AlertType.Info]: \"alert alert-info\",\r\n      [AlertType.Warning]: \"alert alert-warning\",\r\n    };\r\n\r\n    classes.push(alertTypeClass[alert.type]);\r\n\r\n    if (alert.fade) {\r\n      classes.push(\"fade\");\r\n    }\r\n\r\n    return classes.join(\" \");\r\n  }\r\n\r\n  if (!alerts.length) return null;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"m-3\">\r\n        {alerts.map((alert, index) => (\r\n          <div key={index} className={cssClasses(alert)}>\r\n            <a className=\"close\" onClick={() => removeAlert(alert)}>\r\n              &times;\r\n            </a>\r\n            <span dangerouslySetInnerHTML={{ __html: alert.message }}></span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAlert.propTypes = propTypes;\r\nAlert.defaultProps = defaultProps;\r\nexport { Alert };\r\n","/Users/nazar/Desktop/news-classifier-client/src/_helpers/fetch-wrapper.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_services/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_services/account.service.js",[],["152","153"],"/Users/nazar/Desktop/news-classifier-client/src/_components/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_helpers/index.js",[],["154","155"],"/Users/nazar/Desktop/news-classifier-client/src/_helpers/role.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_services/alert.service.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_components/PrivateRoute.jsx",[],["156","157"],"/Users/nazar/Desktop/news-classifier-client/src/home/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/account/index.js",["158"],"import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { accountService } from \"../_services\";\n\nimport { Login } from \"./Login\";\nimport { Register } from \"./Register\";\nimport { VerifyEmail } from \"./VerifyEmail\";\nimport { ForgotPassword } from \"./ForgotPassword\";\nimport { ResetPassword } from \"./ResetPassword\";\n\nfunction Account({ history, match }) {\n  const { path } = match;\n\n  useEffect(() => {\n    // redirect to home if already logged in\n    if (accountService.userValue) {\n      history.push(\"/\");\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-sm-8 offset-sm-2 mt-5\">\n          <div className=\"card m-3\">\n            <Switch>\n              <Route path={`${path}/login`} component={Login} />\n              <Route path={`${path}/register`} component={Register} />\n              <Route path={`${path}/verify-email`} component={VerifyEmail} />\n              <Route\n                path={`${path}/forgot-password`}\n                component={ForgotPassword}\n              />\n              <Route\n                path={`${path}/reset-password`}\n                component={ResetPassword}\n              />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { Account };\n","/Users/nazar/Desktop/news-classifier-client/src/_components/Nav.jsx",["159"],"import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\n\r\nimport { Role } from \"../_helpers\";\r\nimport { accountService } from \"../_services\";\r\n\r\nfunction Nav() {\r\n  const [user, setUser] = useState({});\r\n\r\n  useEffect(() => {\r\n    const subscription = accountService.user.subscribe((x) => setUser(x));\r\n    return subscription.unsubscribe;\r\n  }, []);\r\n\r\n  // only show nav when logged in\r\n  if (!user) return null;\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink exact to=\"/\" className=\"nav-item nav-link\">\r\n            Головна\r\n          </NavLink>\r\n          <NavLink to=\"/classificator\" className=\"nav-item nav-link\">\r\n            Класифікація\r\n          </NavLink>\r\n          <NavLink to=\"/archive\" className=\"nav-item nav-link\">\r\n            Архів\r\n          </NavLink>\r\n          {user.role === Role.Admin && (\r\n            <NavLink to=\"/admin\" className=\"nav-item nav-link\">\r\n              Адміністратор\r\n            </NavLink>\r\n          )}\r\n          <a onClick={accountService.logout} className=\"nav-item nav-link\">\r\n            Вийти\r\n          </a>\r\n        </div>\r\n      </nav>\r\n      <Route path=\"/admin\" component={AdminNav} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction AdminNav({ match }) {\r\n  const { path } = match;\r\n\r\n  return (\r\n    <nav className=\"admin-nav navbar navbar-expand navbar-light\">\r\n      <div className=\"navbar-nav\">\r\n        <NavLink to={`${path}/users`} className=\"nav-item nav-link\">\r\n          Users\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport { Nav };\r\n","/Users/nazar/Desktop/news-classifier-client/src/account/Login.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/account/ForgotPassword.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/account/ResetPassword.jsx",["160","161"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction ResetPassword({ history, location }) {\n  const TokenStatus = {\n    Validating: \"Validating\",\n    Valid: \"Valid\",\n    Invalid: \"Invalid\",\n  };\n\n  const [token, setToken] = useState(null);\n  const [tokenStatus, setTokenStatus] = useState(TokenStatus.Validating);\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n\n    accountService\n      .validateResetToken(token)\n      .then(() => {\n        setToken(token);\n        setTokenStatus(TokenStatus.Valid);\n      })\n      .catch(() => {\n        setTokenStatus(TokenStatus.Invalid);\n      });\n  }, []);\n\n  function getForm() {\n    const initialValues = {\n      password: \"\",\n      confirmPassword: \"\",\n    };\n\n    const validationSchema = Yup.object().shape({\n      password: Yup.string()\n        .min(6, \"Password must be at least 6 characters\")\n        .required(\"Password is required\"),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n        .required(\"Confirm Password is required\"),\n    });\n\n    function onSubmit({ password, confirmPassword }, { setSubmitting }) {\n      alertService.clear();\n      accountService\n        .resetPassword({ token, password, confirmPassword })\n        .then(() => {\n          alertService.success(\"Password reset successful, you can now login\", {\n            keepAfterRouteChange: true,\n          });\n          history.push(\"login\");\n        })\n        .catch((error) => {\n          setSubmitting(false);\n          alertService.error(error);\n        });\n    }\n\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={onSubmit}\n      >\n        {({ errors, touched, isSubmitting }) => (\n          <Form>\n            <div className=\"form-group\">\n              <label>Password</label>\n              <Field\n                name=\"password\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.password && touched.password ? \" is-invalid\" : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm Password</label>\n              <Field\n                name=\"confirmPassword\"\n                type=\"password\"\n                className={\n                  \"form-control\" +\n                  (errors.confirmPassword && touched.confirmPassword\n                    ? \" is-invalid\"\n                    : \"\")\n                }\n              />\n              <ErrorMessage\n                name=\"confirmPassword\"\n                component=\"div\"\n                className=\"invalid-feedback\"\n              />\n            </div>\n            <div className=\"form-row\">\n              <div className=\"form-group col\">\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                  className=\"btn btn-primary\"\n                >\n                  {isSubmitting && (\n                    <span className=\"spinner-border spinner-border-sm mr-1\"></span>\n                  )}\n                  Reset Password\n                </button>\n                <Link to=\"/login\" className=\"btn btn-link\">\n                  Cancel\n                </Link>\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n\n  function getBody() {\n    switch (tokenStatus) {\n      case TokenStatus.Valid:\n        return getForm();\n      case TokenStatus.Invalid:\n        return (\n          <div>\n            Token validation failed, if the token has expired you can get a new\n            one at the <Link to=\"forgot-password\">forgot password</Link> page.\n          </div>\n        );\n      case TokenStatus.Validating:\n        return <div>Validating token...</div>;\n    }\n  }\n\n  return (\n    <div>\n      <h3 className=\"card-header\">Reset Password</h3>\n      <div className=\"card-body\">{getBody()}</div>\n    </div>\n  );\n}\n\nexport { ResetPassword };\n","/Users/nazar/Desktop/news-classifier-client/src/account/Register.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/account/VerifyEmail.jsx",["162","163"],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport queryString from \"query-string\";\n\nimport { accountService, alertService } from \"../_services\";\n\nfunction VerifyEmail({ history, location }) {\n  const EmailStatus = {\n    Verifying: \"Verifying\",\n    Failed: \"Failed\",\n  };\n\n  const [emailStatus, setEmailStatus] = useState(EmailStatus.Verifying);\n\n  useEffect(() => {\n    const { token } = queryString.parse(location.search);\n\n    // remove token from url to prevent http referer leakage\n    history.replace(location.pathname);\n\n    accountService\n      .verifyEmail(token)\n      .then(() => {\n        alertService.success(\"Verification successful, you can now login\", {\n          keepAfterRouteChange: true,\n        });\n        history.push(\"login\");\n      })\n      .catch(() => {\n        setEmailStatus(EmailStatus.Failed);\n      });\n  }, []);\n\n  function getBody() {\n    switch (emailStatus) {\n      case EmailStatus.Verifying:\n        return <div>Verifying...</div>;\n      case EmailStatus.Failed:\n        return (\n          <div>\n            Verification failed, you can also verify your account using the{\" \"}\n            <Link to=\"forgot-password\">forgot password</Link> page.\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div>\n      <h3 className=\"card-header\">Verify Email</h3>\n      <div className=\"card-body\">{getBody()}</div>\n    </div>\n  );\n}\n\nexport { VerifyEmail };\n","/Users/nazar/Desktop/news-classifier-client/src/_helpers/history.js",[],"/Users/nazar/Desktop/news-classifier-client/src/_helpers/fake-backend.js",["164"],"import { Role } from \"./\";\nimport { alertService } from \"../_services\";\n\n// array in local storage for registered users\nconst usersKey = \"react-signup-verification-boilerplate-users\";\nconst users = JSON.parse(localStorage.getItem(usersKey)) || [];\n\nexport function configureFakeBackend() {\n  let realFetch = window.fetch;\n  window.fetch = function (url, opts) {\n    return new Promise((resolve, reject) => {\n      // wrap in timeout to simulate server api call\n      setTimeout(handleRoute, 500);\n\n      function handleRoute() {\n        const { method } = opts;\n        switch (true) {\n          case url.endsWith(\"/accounts/authenticate\") && method === \"POST\":\n            return authenticate();\n          case url.endsWith(\"/accounts/refresh-token\") && method === \"POST\":\n            return refreshToken();\n          case url.endsWith(\"/accounts/revoke-token\") && method === \"POST\":\n            return revokeToken();\n          case url.endsWith(\"/accounts/register\") && method === \"POST\":\n            return register();\n          case url.endsWith(\"/accounts/verify-email\") && method === \"POST\":\n            return verifyEmail();\n          case url.endsWith(\"/accounts/forgot-password\") && method === \"POST\":\n            return forgotPassword();\n          case url.endsWith(\"/accounts/validate-reset-token\") &&\n            method === \"POST\":\n            return validateResetToken();\n          case url.endsWith(\"/accounts/reset-password\") && method === \"POST\":\n            return resetPassword();\n          case url.endsWith(\"/accounts\") && method === \"GET\":\n            return getUsers();\n          case url.match(/\\/accounts\\/\\d+$/) && method === \"GET\":\n            return getUserById();\n          case url.endsWith(\"/accounts\") && method === \"POST\":\n            return createUser();\n          case url.match(/\\/accounts\\/\\d+$/) && method === \"PUT\":\n            return updateUser();\n          case url.match(/\\/accounts\\/\\d+$/) && method === \"DELETE\":\n            return deleteUser();\n          default:\n            // pass through any requests not handled above\n            return realFetch(url, opts)\n              .then((response) => resolve(response))\n              .catch((error) => reject(error));\n        }\n      }\n\n      // route functions\n\n      function authenticate() {\n        const { email, password } = body();\n        const user = users.find(\n          (x) => x.email === email && x.password === password && x.isVerified\n        );\n\n        if (!user) return error(\"Email or password is incorrect\");\n\n        // add refresh token to user\n        user.refreshTokens.push(generateRefreshToken());\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok({\n          id: user.id,\n          email: user.email,\n          title: user.title,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          role: user.role,\n          jwtToken: generateJwtToken(user),\n        });\n      }\n\n      function refreshToken() {\n        const refreshToken = getRefreshToken();\n\n        if (!refreshToken) return unauthorized();\n\n        const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n        if (!user) return unauthorized();\n\n        // replace old refresh token with a new one and save\n        user.refreshTokens = user.refreshTokens.filter(\n          (x) => x !== refreshToken\n        );\n        user.refreshTokens.push(generateRefreshToken());\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok({\n          id: user.id,\n          email: user.email,\n          title: user.title,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          role: user.role,\n          jwtToken: generateJwtToken(user),\n        });\n      }\n\n      function revokeToken() {\n        if (!isAuthenticated()) return unauthorized();\n\n        const refreshToken = getRefreshToken();\n        const user = users.find((x) => x.refreshTokens.includes(refreshToken));\n\n        // revoke token and save\n        user.refreshTokens = user.refreshTokens.filter(\n          (x) => x !== refreshToken\n        );\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok();\n      }\n\n      function register({ location }) {\n        const user = body();\n\n        if (users.find((x) => x.email === user.email)) {\n          // display email already registered \"email\" in alert\n          setTimeout(() => {\n            alertService.info(\n              `\n                            <h4>Email Already Registered</h4>\n                            <p>Your email ${user.email} is already registered.</p>\n                            <p>If you don't know your password please visit the <a href=\"${location.origin}/account/forgot-password\">forgot password</a> page.</p>\n                            <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                        `,\n              { autoClose: false }\n            );\n          }, 1000);\n\n          // always return ok() response to prevent email enumeration\n          return ok();\n        }\n\n        // assign user id and a few other properties then save\n        user.id = newUserId();\n        if (user.id === 1) {\n          // first registered user is an admin\n          user.role = Role.Admin;\n        } else {\n          user.role = Role.User;\n        }\n        user.dateCreated = new Date().toISOString();\n        user.verificationToken = new Date().getTime().toString();\n        user.isVerified = false;\n        user.refreshTokens = [];\n        delete user.confirmPassword;\n        users.push(user);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        // display verification email in alert\n        setTimeout(() => {\n          const verifyUrl = `${location.origin}/account/verify-email?token=${user.verificationToken}`;\n          alertService.info(\n            `\n                        <h4>Verification Email</h4>\n                        <p>Thanks for registering!</p>\n                        <p>Please click the below link to verify your email address:</p>\n                        <p><a href=\"${verifyUrl}\">${verifyUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n            { autoClose: false }\n          );\n        }, 1000);\n\n        return ok();\n      }\n\n      function verifyEmail() {\n        const { token } = body();\n        const user = users.find(\n          (x) => !!x.verificationToken && x.verificationToken === token\n        );\n\n        if (!user) return error(\"Verification failed\");\n\n        // set is verified flag to true if token is valid\n        user.isVerified = true;\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok();\n      }\n\n      function forgotPassword({ location }) {\n        const { email } = body();\n        const user = users.find((x) => x.email === email);\n\n        // always return ok() response to prevent email enumeration\n        if (!user) return ok();\n\n        // create reset token that expires after 24 hours\n        user.resetToken = new Date().getTime().toString();\n        user.resetTokenExpires = new Date(\n          Date.now() + 24 * 60 * 60 * 1000\n        ).toISOString();\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        // display password reset email in alert\n        setTimeout(() => {\n          const resetUrl = `${location.origin}/account/reset-password?token=${user.resetToken}`;\n          alertService.info(\n            `\n                        <h4>Reset Password Email</h4>\n                        <p>Please click the below link to reset your password, the link will be valid for 1 day:</p>\n                        <p><a href=\"${resetUrl}\">${resetUrl}</a></p>\n                        <div><strong>NOTE:</strong> The fake backend displayed this \"email\" so you can test without an api. A real backend would send a real email.</div>\n                    `,\n            { autoClose: false }\n          );\n        }, 1000);\n\n        return ok();\n      }\n\n      function validateResetToken() {\n        const { token } = body();\n        const user = users.find(\n          (x) =>\n            !!x.resetToken &&\n            x.resetToken === token &&\n            new Date() < new Date(x.resetTokenExpires)\n        );\n\n        if (!user) return error(\"Invalid token\");\n\n        return ok();\n      }\n\n      function resetPassword() {\n        const { token, password } = body();\n        const user = users.find(\n          (x) =>\n            !!x.resetToken &&\n            x.resetToken === token &&\n            new Date() < new Date(x.resetTokenExpires)\n        );\n\n        if (!user) return error(\"Invalid token\");\n\n        // update password and remove reset token\n        user.password = password;\n        user.isVerified = true;\n        delete user.resetToken;\n        delete user.resetTokenExpires;\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok();\n      }\n\n      function getUsers() {\n        if (!isAuthorized(Role.Admin)) return unauthorized();\n\n        return ok(users);\n      }\n\n      function getUserById() {\n        if (!isAuthenticated()) return unauthorized();\n\n        let user = users.find((x) => x.id === idFromUrl());\n\n        // users can get own profile and admins can get all profiles\n        if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n          return unauthorized();\n        }\n\n        return ok(user);\n      }\n\n      function createUser() {\n        if (!isAuthorized(Role.Admin)) return unauthorized();\n\n        const user = body();\n        if (users.find((x) => x.email === user.email)) {\n          return error(`Email ${user.email} is already registered`);\n        }\n\n        // assign user id and a few other properties then save\n        user.id = newUserId();\n        user.dateCreated = new Date().toISOString();\n        user.isVerified = true;\n        delete user.confirmPassword;\n        users.push(user);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok();\n      }\n\n      function updateUser() {\n        if (!isAuthenticated()) return unauthorized();\n\n        let params = body();\n        let user = users.find((x) => x.id === idFromUrl());\n\n        // users can update own profile and admins can update all profiles\n        if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n          return unauthorized();\n        }\n\n        // only update password if included\n        if (!params.password) {\n          delete params.password;\n        }\n        // don't save confirm password\n        delete params.confirmPassword;\n\n        // update and save user\n        Object.assign(user, params);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok({\n          id: user.id,\n          email: user.email,\n          title: user.title,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          role: user.role,\n        });\n      }\n\n      function deleteUser() {\n        if (!isAuthenticated()) return unauthorized();\n\n        let user = users.find((x) => x.id === idFromUrl());\n\n        // users can delete own account and admins can delete any account\n        if (user.id !== currentUser().id && !isAuthorized(Role.Admin)) {\n          return unauthorized();\n        }\n\n        // delete user then save\n        users = users.filter((x) => x.id !== idFromUrl());\n        localStorage.setItem(usersKey, JSON.stringify(users));\n        return ok();\n      }\n\n      // helper functions\n\n      function ok(body) {\n        resolve({\n          ok: true,\n          text: () => Promise.resolve(JSON.stringify(body)),\n        });\n      }\n\n      function unauthorized() {\n        resolve({\n          status: 401,\n          text: () =>\n            Promise.resolve(JSON.stringify({ message: \"Unauthorized\" })),\n        });\n      }\n\n      function error(message) {\n        resolve({\n          status: 400,\n          text: () => Promise.resolve(JSON.stringify({ message })),\n        });\n      }\n\n      function isAuthenticated() {\n        return !!currentUser();\n      }\n\n      function isAuthorized(role) {\n        const user = currentUser();\n        if (!user) return false;\n        return user.role === role;\n      }\n\n      function idFromUrl() {\n        const urlParts = url.split(\"/\");\n        return parseInt(urlParts[urlParts.length - 1]);\n      }\n\n      function body() {\n        return opts.body && JSON.parse(opts.body);\n      }\n\n      function newUserId() {\n        return users.length ? Math.max(...users.map((x) => x.id)) + 1 : 1;\n      }\n\n      function generateJwtToken(user) {\n        // create token that expires in 15 minutes\n        const tokenPayload = {\n          exp: Math.round(\n            new Date(Date.now() + 15 * 60 * 1000).getTime() / 1000\n          ),\n          id: user.id,\n        };\n        return `fake-jwt-token.${btoa(JSON.stringify(tokenPayload))}`;\n      }\n\n      function currentUser() {\n        // check if jwt token is in auth header\n        const authHeader = opts.headers[\"Authorization\"] || \"\";\n        if (!authHeader.startsWith(\"Bearer fake-jwt-token\")) return;\n\n        // check if token is expired\n        const jwtToken = JSON.parse(atob(authHeader.split(\".\")[1]));\n        const tokenExpired = Date.now() > jwtToken.exp * 1000;\n        if (tokenExpired) return;\n\n        const user = users.find((x) => x.id === jwtToken.id);\n        return user;\n      }\n\n      function generateRefreshToken() {\n        const token = new Date().getTime().toString();\n\n        // add token cookie that expires in 7 days\n        const expires = new Date(\n          Date.now() + 7 * 24 * 60 * 60 * 1000\n        ).toUTCString();\n        document.cookie = `fakeRefreshToken=${token}; expires=${expires}; path=/`;\n\n        return token;\n      }\n\n      function getRefreshToken() {\n        // get refresh token from cookie\n        return (\n          document.cookie\n            .split(\";\")\n            .find((x) => x.includes(\"fakeRefreshToken\")) || \"=\"\n        ).split(\"=\")[1];\n      }\n    });\n  };\n}\n","/Users/nazar/Desktop/news-classifier-client/src/admin/users/List.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/admin/users/AddEdit.jsx",["165","166","167","168","169"],"/Users/nazar/Desktop/news-classifier-client/src/admin/users/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/admin/Overview.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/_services/classificator.service.js",[],"/Users/nazar/Desktop/news-classifier-client/src/admin/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/classificator/index.js",[],"/Users/nazar/Desktop/news-classifier-client/src/profile/Details.jsx",[],"/Users/nazar/Desktop/news-classifier-client/src/profile/Update.jsx",["170"],"/Users/nazar/Desktop/news-classifier-client/src/profile/index.js",[],{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","replacedBy":"174"},{"ruleId":"171","replacedBy":"175"},{"ruleId":"173","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":15,"column":10,"nodeType":"179","messageId":"180","endLine":15,"endColumn":14},{"ruleId":"171","replacedBy":"181"},{"ruleId":"173","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":58,"column":6,"nodeType":"185","endLine":58,"endColumn":8,"suggestions":"186"},{"ruleId":"187","severity":1,"message":"188","line":106,"column":13,"nodeType":"189","endLine":106,"endColumn":69},{"ruleId":"171","replacedBy":"190"},{"ruleId":"173","replacedBy":"191"},{"ruleId":"171","replacedBy":"192"},{"ruleId":"173","replacedBy":"193"},{"ruleId":"171","replacedBy":"194"},{"ruleId":"173","replacedBy":"195"},{"ruleId":"183","severity":1,"message":"196","line":20,"column":6,"nodeType":"185","endLine":20,"endColumn":8,"suggestions":"197"},{"ruleId":"187","severity":1,"message":"188","line":36,"column":11,"nodeType":"189","endLine":36,"endColumn":76},{"ruleId":"183","severity":1,"message":"198","line":34,"column":6,"nodeType":"185","endLine":34,"endColumn":8,"suggestions":"199"},{"ruleId":"200","severity":1,"message":"201","line":133,"column":5,"nodeType":"202","messageId":"203","endLine":145,"endColumn":6},{"ruleId":"183","severity":1,"message":"204","line":32,"column":6,"nodeType":"185","endLine":32,"endColumn":8,"suggestions":"205"},{"ruleId":"200","severity":1,"message":"201","line":35,"column":5,"nodeType":"202","messageId":"203","endLine":45,"endColumn":6},{"ruleId":"206","severity":1,"message":"207","line":337,"column":9,"nodeType":"179","messageId":"208","endLine":337,"endColumn":14},{"ruleId":"177","severity":1,"message":"209","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":26},{"ruleId":"177","severity":1,"message":"210","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":14},{"ruleId":"177","severity":1,"message":"211","line":3,"column":18,"nodeType":"179","messageId":"180","endLine":3,"endColumn":23},{"ruleId":"177","severity":1,"message":"212","line":3,"column":25,"nodeType":"179","messageId":"180","endLine":3,"endColumn":29},{"ruleId":"177","severity":1,"message":"213","line":3,"column":31,"nodeType":"179","messageId":"180","endLine":3,"endColumn":43},{"ruleId":"177","severity":1,"message":"214","line":48,"column":22,"nodeType":"179","messageId":"180","endLine":48,"endColumn":35},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],["215"],["216"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar",["215"],["216"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id' and 'removeAlert'. Either include them or remove the dependency array.","ArrayExpression",["217"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["215"],["216"],["215"],["216"],["215"],["216"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["218"],"React Hook useEffect has missing dependencies: 'TokenStatus.Invalid', 'TokenStatus.Valid', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["219"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","React Hook useEffect has missing dependencies: 'EmailStatus.Failed', 'history', 'location.pathname', and 'location.search'. Either include them or remove the dependency array.",["220"],"no-const-assign","'users' is constant.","const","'useEffect' is defined but never used.","'Link' is defined but never used.","'Field' is defined but never used.","'Form' is defined but never used.","'ErrorMessage' is defined but never used.","'setIsDeleting' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [id, removeAlert]",{"range":"229","text":"230"},"Update the dependencies array to be: [history]",{"range":"231","text":"232"},"Update the dependencies array to be: [TokenStatus.Invalid, TokenStatus.Valid, history, location.pathname, location.search]",{"range":"233","text":"234"},"Update the dependencies array to be: [EmailStatus.Failed, history, location.pathname, location.search]",{"range":"235","text":"236"},[1764,1766],"[id, removeAlert]",[562,564],"[history]",[966,968],"[TokenStatus.Invalid, TokenStatus.Valid, history, location.pathname, location.search]",[889,891],"[EmailStatus.Failed, history, location.pathname, location.search]"]